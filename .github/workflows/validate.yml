# This is a basic workflow to help validate your Terraform configuration

name: Validate Infrastructure

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches-ignore:
      - 'Production'
    paths:
      - '**'
    


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "validate"
  terraform:
    name: 'Validate'
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      
    steps:
      - uses: actions/checkout@v4.1.1

      # Install TFLint
      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      # Define an array of working directories
      - name: Set directory paths
        run: |
          echo "WORKING_DIR=./" >> $GITHUB_ENV
          echo "GLOBAL=./azure-terraform-project/global" >> $GITHUB_ENV
          echo "DEPLOYMENT=./azure-terraform-project/deployments" >> $GITHUB_ENV

      # Run Terraform commands for each directory
      - name: Terraform init, fmt, validate, tflint for WORKING_DIR
        run: |
          terraform init
          terraform fmt
          terraform validate
          tflint
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform init, fmt, validate, tflint for GLOBAL
        run: |
          terraform init
          terraform fmt
          terraform validate
          tflint
        working-directory: ${{ env.GLOBAL }}

      - name: Terraform init, fmt, validate, tflint for DEPLOYMENT
        run: |
          terraform init
          terraform fmt
          terraform validate
          tflint
        working-directory: ${{ env.DEPLOYMENT }}
