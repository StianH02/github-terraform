# This is a basic workflow to help validate your Terraform configuration

name: Validate Infrastructure

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - 'Development'
      - 'Staging'
      - 'Production'
    paths:
      - '**'
    


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "validate"
  terraform:
    name: 'Validate'
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./course materials/module07/demo-infra
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check out the repository
      - uses: actions/checkout@v4.1.1

      # Terraform initialization
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      # Run Terraform format check to ensure code is formatted
      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: ${{ env.WORKING_DIR }}

      # Run Terraform validate to validate configuration
      - name: Terraform validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      # Run tflint to catch any Terraform-specific issues
      - name: TFLint
        run: tflint
        working-directory: ${{ env.WORKING_DIR }}
